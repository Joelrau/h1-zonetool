#include <std_include.hpp>
#include "techset.hpp"

#include "vertexshader.hpp"
#include "vertexdecl.hpp"
#include "hullshader.hpp"
#include "domainshader.hpp"
#include "pixelshader.hpp"

#include <utils/io.hpp>

namespace zonetool
{
	namespace
	{
		h2::MaterialTechniqueSet* convert_to_h2(MaterialTechniqueSet* h1_asset, utils::memory::allocator& allocator)
		{
			const auto asset = allocator.allocate<h2::MaterialTechniqueSet>();
			std::memcpy(asset, h1_asset, sizeof(MaterialTechniqueSet));
			
			std::vector<int> debug_tech_indexes = {59, 119, 179, 239};
			auto current_debug_tech = 0;
			auto h1_tecniques_index = 0;
			for (auto i = 0u; i < TECHNIQUES_COUNT; i++)
			{
				asset->techniques[i] = reinterpret_cast<h2::MaterialTechnique*>(h1_asset->techniques[h1_tecniques_index]);
				if (current_debug_tech < debug_tech_indexes.size() && h1_tecniques_index == debug_tech_indexes[current_debug_tech])
				{
					asset->techniques[i + 1] = asset->techniques[i];
					asset->techniques[i + 2] = asset->techniques[i];
					asset->techniques[i + 3] = asset->techniques[i];
					++current_debug_tech;
					i += 3;
				}

				++h1_tecniques_index;
			}

			return asset;
		}

		unsigned char* convert_to_h2(unsigned char* h1_array, utils::memory::allocator& allocator)
		{
			const auto array = allocator.allocate_array<unsigned char>(TECHNIQUES_COUNT);

			std::vector<int> debug_tech_indexes = {59, 119, 179, 239};
			auto current_debug_tech = 0;
			auto h1_tecniques_index = 0;
			for (auto i = 0u; i < TECHNIQUES_COUNT; i++)
			{
				array[i] = h1_array[h1_tecniques_index];
				if (current_debug_tech < debug_tech_indexes.size() && h1_tecniques_index == debug_tech_indexes[current_debug_tech])
				{
					array[i + 1] = array[i];
					array[i + 2] = array[i];
					array[i + 3] = array[i];
					++current_debug_tech;
					i += 3;
				}

				++h1_tecniques_index;
			}

			return array;
		}

		std::array<std::string, 436> h2_code_consts =
		{
			"CONST_SRC_CODE_LIGHT_POSITION",
			"CONST_SRC_CODE_LIGHT_DIFFUSE",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET",
			"CONST_SRC_CODE_LIGHT_SPECULAR",
			"CONST_SRC_CODE_LIGHT_SPOTDIR",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM",
			"CONST_SRC_CODE_LIGHT_POSITION1",
			"CONST_SRC_CODE_LIGHT_DIFFUSE1",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE1",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET1",
			"CONST_SRC_CODE_LIGHT_SPECULAR1",
			"CONST_SRC_CODE_LIGHT_SPOTDIR1",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS1",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT1",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM1",
			"CONST_SRC_CODE_LIGHT_POSITION2",
			"CONST_SRC_CODE_LIGHT_DIFFUSE2",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE2",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET2",
			"CONST_SRC_CODE_LIGHT_SPECULAR2",
			"CONST_SRC_CODE_LIGHT_SPOTDIR2",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS2",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT2",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM2",
			"CONST_SRC_CODE_LIGHT_POSITION3",
			"CONST_SRC_CODE_LIGHT_DIFFUSE3",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE3",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET3",
			"CONST_SRC_CODE_LIGHT_SPECULAR3",
			"CONST_SRC_CODE_LIGHT_SPOTDIR3",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS3",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT3",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM3",
			"CONST_SRC_CODE_LIGHT_POSITION_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_POSITION_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_POSITION_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_POSITION_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_DIFFUSE_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_DIFFUSE_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_DIFFUSE_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_DIFFUSE_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_SPECULAR_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_SPECULAR_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_SPECULAR_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_SPECULAR_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_SPOTDIR_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_SPOTDIR_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_SPOTDIR_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_SPOTDIR_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_DYN_COUNT",
			"CONST_SRC_CODE_LIGHT_DYN_TYPES",
			"CONST_SRC_CODE_LIGHT_DYN_SHADOW_TYPES",
			"CONST_SRC_CODE_PARTICLE_CLOUD_COLOR",
			"CONST_SRC_CODE_GAMETIME",
			"CONST_SRC_CODE_SYSTEMTIME",
			"CONST_SRC_CODE_GENERIC_MATERIAL_DATA",
			"CONST_SRC_CODE_EYEOFFSET",
			"CONST_SRC_CODE_RATIO_MASK",
			"CONST_SRC_CODE_WORLD_MATRIX_EYE_OFFSET",
			"CONST_SRC_CODE_HUD_OUTLINE_PARMS",
			"CONST_SRC_CODE_MODEL_VELOCITY_PARMS",
			"CONST_SRC_CODE_MODEL_VELOCITY_SKINNED_PARMS",
			"CONST_SRC_CODE_POSTFX_CONTROL0",
			"CONST_SRC_CODE_POSTFX_CONTROL1",
			"CONST_SRC_CODE_POSTFX_CONTROL2",
			"CONST_SRC_CODE_POSTFX_CONTROL3",
			"CONST_SRC_CODE_POSTFX_CONTROL4",
			"CONST_SRC_CODE_POSTFX_CONTROL5",
			"CONST_SRC_CODE_POSTFX_CONTROL6",
			"CONST_SRC_CODE_POSTFX_CONTROL7",
			"CONST_SRC_CODE_POSTFX_CONTROL8",
			"CONST_SRC_CODE_POSTFX_CONTROL9",
			"CONST_SRC_CODE_POSTFX_CONTROLA",
			"CONST_SRC_CODE_POSTFX_CONTROLB",
			"CONST_SRC_CODE_POSTFX_CONTROLC",
			"CONST_SRC_CODE_POSTFX_CONTROLD",
			"CONST_SRC_CODE_POSTFX_CONTROLE",
			"CONST_SRC_CODE_POSTFX_CONTROLF",
			"CONST_SRC_CODE_SCRIPT_PARMS",
			"CONST_SRC_CODE_EFFECT_MODEL_COLOR",
			"CONST_SRC_CODE_EFFECT_MODEL_COLOR_EMISSIVE",
			"CONST_SRC_CODE_FILTER_TAP_0",
			"CONST_SRC_CODE_FILTER_TAP_1",
			"CONST_SRC_CODE_FILTER_TAP_2",
			"CONST_SRC_CODE_FILTER_TAP_3",
			"CONST_SRC_CODE_FILTER_TAP_4",
			"CONST_SRC_CODE_FILTER_TAP_5",
			"CONST_SRC_CODE_FILTER_TAP_6",
			"CONST_SRC_CODE_FILTER_TAP_7",
			"CONST_SRC_CODE_FILTER_TAP_8",
			"CONST_SRC_CODE_FILTER_TAP_9",
			"CONST_SRC_CODE_FILTER_TAP_10",
			"CONST_SRC_CODE_FILTER_TAP_11",
			"CONST_SRC_CODE_COLOR_MATRIX_R",
			"CONST_SRC_CODE_COLOR_MATRIX_G",
			"CONST_SRC_CODE_COLOR_MATRIX_B",
			"CONST_SRC_CODE_RENDER_TARGET_SIZE",
			"CONST_SRC_CODE_RENDER_SOURCE_SIZE",
			"CONST_SRC_CODE_VEIL_PARAMS",
			"CONST_SRC_CODE_FXAA_RCPFRAMEOPT",
			"CONST_SRC_CODE_VOLUME_LIGHT_SCATTER_1",
			"CONST_SRC_CODE_VOLUME_LIGHT_SCATTER_2",
			"CONST_SRC_CODE_VOLUME_LIGHT_SCATTER_3",
			"CONST_SRC_CODE_MODEL_LIGHTMAP_PARAMS",
			"CONST_SRC_CODE_NEARPLANE_ORG",
			"CONST_SRC_CODE_NEARPLANE_DX",
			"CONST_SRC_CODE_NEARPLANE_DY",
			"CONST_SRC_CODE_SSAO_POWER_BB_SHARPNESS_STEP",
			"CONST_SRC_CODE_SSAO_COLOR_COEFF",
			"CONST_SRC_CODE_SSAO_FALLOFF_DEPTH_SCALE",
			"CONST_SRC_CODE_SSAO_UV_TO_ROT_SCALE_AND_FADE",
			"CONST_SRC_CODE_SSAO_SAMPLE_MAT_SCALE",
			"CONST_SRC_CODE_SSAO_DEPTH_OFFSET_REJECT",
			"CONST_SRC_CODE_LIT2D_LIGHTDIRX2",
			"CONST_SRC_CODE_LIT2D_SPECHALFANGLEDIRX2",
			"CONST_SRC_CODE_LIT2D_AMBIENTCOLOR",
			"CONST_SRC_CODE_LIT2D_DIFFUSECOLOR",
			"CONST_SRC_CODE_LIT2D_SPECCOLOR_SPECEXPONENT",
			"CONST_SRC_CODE_LIT2D_ADDITIVECOLOR",
			"CONST_SRC_CODE_LIT2D_BLOODSPATTER_AMBIENTCOLOR",
			"CONST_SRC_CODE_LIT2D_BLOODSPATTER_DIFFUSECOLOR",
			"CONST_SRC_CODE_LIT2D_BLOODSPATTER_SPECCOLOR_SPECEXPONENT",
			"CONST_SRC_CODE_LIT2D_BLOODSPATTER_ADDITIVECOLOR",
			"CONST_SRC_CODE_LIT2D_HUDBLOOD_COLOR",
			"CONST_SRC_CODE_LIT2D_HUDBLOOD_COLOR_THIN",
			"CONST_SRC_CODE_DOF_EQUATION_VIEWMODEL_AND_FAR_BLUR",
			"CONST_SRC_CODE_DOF_EQUATION_SCENE",
			"CONST_SRC_CODE_DOF_LERP_SCALE",
			"CONST_SRC_CODE_DOF_LERP_BIAS",
			"CONST_SRC_CODE_DOF_ROW_DELTA",
			"CONST_SRC_CODE_DOF_EQUATION",
			"CONST_SRC_CODE_DOF_PARAMS",
			"CONST_SRC_CODE_DOF_TILE_PARAMS",
			"CONST_SRC_CODE_FRAME_COUNT_PARAMS",
			"CONST_SRC_CODE_MOTION_MATRIX_X",
			"CONST_SRC_CODE_MOTION_MATRIX_Y",
			"CONST_SRC_CODE_MOTION_MATRIX_W",
			"CONST_SRC_CODE_SSR_PREV_FRAME_VIEWPROJECTION_MATRIX_R0",
			"CONST_SRC_CODE_SSR_PREV_FRAME_VIEWPROJECTION_MATRIX_R1",
			"CONST_SRC_CODE_SSR_PREV_FRAME_VIEWPROJECTION_MATRIX_R2",
			"CONST_SRC_CODE_SSR_PREV_FRAME_VIEWPROJECTION_MATRIX_R3",
			"CONST_SRC_CODE_PREV_EYEPOSITION_TRANSFORM",
			"CONST_SRC_CODE_SCREEN_SPACE_REFLECTION_PARAMETERS",
			"CONST_SRC_CODE_CLIP_SPACE_LOOKUP_SCALE_AND_OFFSET",
			"CONST_SRC_CODE_SSR_CLIP_TO_FADE_SCALE_OFFSET_PS",
			"CONST_SRC_CODE_SSS_MRT_OFF_SHADER_OFF",
			"CONST_SRC_CODE_MDAO_VIEWTOOCCLUDER_MATRIX_R0",
			"CONST_SRC_CODE_MDAO_VIEWTOOCCLUDER_MATRIX_R1",
			"CONST_SRC_CODE_MDAO_VIEWTOOCCLUDER_MATRIX_R2",
			"CONST_SRC_CODE_MDAO_VIEWTOOCCLUDER_MATRIX_R3",
			"CONST_SRC_CODE_MDAO_WORLDTOOCCLUDERFRAME_MATRIX_R0",
			"CONST_SRC_CODE_MDAO_WORLDTOOCCLUDERFRAME_MATRIX_R1",
			"CONST_SRC_CODE_MDAO_WORLDTOOCCLUDERFRAME_MATRIX_R2",
			"CONST_SRC_CODE_MDAO_WORLDTOOCCLUDERFRAME_MATRIX_R3",
			"CONST_SRC_CODE_MDAO_SCREEN_PARAMS",
			"CONST_SRC_CODE_MDAO_CAMERA_PARAMS",
			"CONST_SRC_CODE_MDAO_LOOKUP_PARAMS",
			"CONST_SRC_CODE_MDAO_VOLUME_PARAMS",
			"CONST_SRC_CODE_DISTORTION_SAMPLE_LIMITS_PS",
			"CONST_SRC_CODE_SCOPE_SAMPLE_LIMITS_PS",
			"CONST_SRC_CODE_UV_TO_PREV_SCALED_CLIP_MAT_C0_PS",
			"CONST_SRC_CODE_UV_TO_PREV_SCALED_CLIP_MAT_C1_PS",
			"CONST_SRC_CODE_UV_TO_PREV_SCALED_CLIP_MAT_C3_PS",
			"CONST_SRC_CODE_PREV_FRAME_VIEWPROJECTION_MATRIX_R0",
			"CONST_SRC_CODE_PREV_FRAME_VIEWPROJECTION_MATRIX_R1",
			"CONST_SRC_CODE_PREV_FRAME_VIEWPROJECTION_MATRIX_R2",
			"CONST_SRC_CODE_PREV_FRAME_VIEWPROJECTION_MATRIX_R3",
			"CONST_SRC_CODE_PREV_FRAME_WORLD_MATRIX_EYE_OFFSET",
			"CONST_SRC_CODE_STATIC_VELOCITY_PARMS",
			"CONST_SRC_CODE_MOTION_BLUR_HQ_PARAMS",
			"CONST_SRC_CODE_MOTION_BLUR_HQ_TILE_MAX_PARAMS",
			"CONST_SRC_CODE_MB_UV_TO_PREV_SCALED_CLIP_MAT_C0_PS",
			"CONST_SRC_CODE_MB_UV_TO_PREV_SCALED_CLIP_MAT_C1_PS",
			"CONST_SRC_CODE_MB_UV_TO_PREV_SCALED_CLIP_MAT_C3_PS",
			"CONST_SRC_CODE_SHADOWMAP_SWITCH_PARTITION_ARRAY_0",
			"CONST_SRC_CODE_SHADOWMAP_SWITCH_PARTITION_ARRAY_1",
			"CONST_SRC_CODE_SHADOWMAP_DISTANCE_BIAS",
			"CONST_SRC_CODE_SHADOWMAP_SCALE",
			"CONST_SRC_CODE_SHADOWMAP_PARTITION_UV_OFFSET",
			"CONST_SRC_CODE_SHADOWMAP_CASCADE_MASK",
			"CONST_SRC_CODE_SHADOWMAP_DISTANCE_BLEND",
			"CONST_SRC_CODE_ZNEAR",
			"CONST_SRC_CODE_LIGHTING_LOOKUP_SCALE",
			"CONST_SRC_CODE_INV_SCENE_PROJECTION",
			"CONST_SRC_CODE_RIM_LIGHT_0_DIR",
			"CONST_SRC_CODE_RIM_LIGHT_0_COLOR",
			"CONST_SRC_CODE_RIM_LIGHT_1_DIR",
			"CONST_SRC_CODE_RIM_LIGHT_1_COLOR",
			"CONST_SRC_CODE_RIM_LIGHT_TECHNIQUE",
			"CONST_SRC_CODE_DEBUG_BUMPMAP",
			"CONST_SRC_CODE_DEBUG_TEXDENSITY",
			"CONST_SRC_CODE_DEBUG_PIXEL_COST",
			"CONST_SRC_CODE_MATERIAL_COLOR",
			"CONST_SRC_CODE_FOG",
			"CONST_SRC_CODE_FOG_COLOR_LINEAR",
			"CONST_SRC_CODE_FOG_COLOR_GAMMA",
			"CONST_SRC_CODE_FOG_SUN_CONSTS",
			"CONST_SRC_CODE_FOG_SUN_COLOR_LINEAR",
			"CONST_SRC_CODE_FOG_SUN_COLOR_GAMMA",
			"CONST_SRC_CODE_FOG_SUN_DIR",
			"CONST_SRC_CODE_FOG_SKY_FOG",
			"CONST_SRC_CODE_FOG_HEIGHT_FOG",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_0",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_1",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_2",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_3",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_4",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_5",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_6",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_7",
			"CONST_SRC_CODE_FOG_SKY_DIR",
			"CONST_SRC_CODE_FOG_DEPTHHACK",
			"CONST_SRC_CODE_GLOW_SETUP",
			"CONST_SRC_CODE_GLOW_APPLY",
			"CONST_SRC_CODE_GLOW_SETUP_ALT_COLOR_SCALE",
			"CONST_SRC_CODE_COLOR_BIAS",
			"CONST_SRC_CODE_COLOR_TINT_BASE",
			"CONST_SRC_CODE_COLOR_TINT_DELTA",
			"CONST_SRC_CODE_COLOR_TINT_QUADRATIC_DELTA",
			"CONST_SRC_CODE_COLOR_TINT_HDR_CROSSOVER",
			"CONST_SRC_CODE_COLOR_TINT_HDR_DARK",
			"CONST_SRC_CODE_COLOR_TINT_HDR_DARK_TANGENT",
			"CONST_SRC_CODE_COLOR_TINT_HDR_MEDIUM",
			"CONST_SRC_CODE_COLOR_TINT_HDR_MEDIUM_TANGENT",
			"CONST_SRC_CODE_COLOR_TINT_HDR_LIGHT",
			"CONST_SRC_CODE_COLOR_TINT_HDR_LIGHT_TANGENT",
			"CONST_SRC_CODE_COLOR_TINT_HDR_SPECULAR",
			"CONST_SRC_CODE_COLOR_TINT_HDR_SPECULAR_TANGENT",
			"CONST_SRC_CODE_PERCEPTUAL_PARMS",
			"CONST_SRC_CODE_FILMIC_PARMS",
			"CONST_SRC_CODE_FILMIC_SHOULDER_PARMS",
			"CONST_SRC_CODE_FILMIC_TOE_PARMS",
			"CONST_SRC_CODE_TONEMAP_PARMS",
			"CONST_SRC_CODE_HDR_STAGE_PARMS",
			"CONST_SRC_CODE_UI3D_UV_SETUP_0",
			"CONST_SRC_CODE_UI3D_UV_SETUP_1",
			"CONST_SRC_CODE_UI3D_UV_SETUP_2",
			"CONST_SRC_CODE_UI3D_UV_SETUP_3",
			"CONST_SRC_CODE_UI3D_UV_SETUP_4",
			"CONST_SRC_CODE_UI3D_UV_SETUP_5",
			"CONST_SRC_CODE_HUDFX_PARMS",
			"CONST_SRC_CODE_HUDFX_PARMS2",
			"CONST_SRC_CODE_SSSS_PARAMS",
			"CONST_SRC_CODE_SSSS_SCALE",
			"CONST_SRC_CODE_SSSS_KERNEL_0",
			"CONST_SRC_CODE_SSSS_KERNEL_1",
			"CONST_SRC_CODE_SSSS_KERNEL_2",
			"CONST_SRC_CODE_SSSS_KERNEL_3",
			"CONST_SRC_CODE_SSSS_KERNEL_4",
			"CONST_SRC_CODE_SSSS_KERNEL_5",
			"CONST_SRC_CODE_SSSS_KERNEL_6",
			"CONST_SRC_CODE_SSSS_KERNEL_7",
			"CONST_SRC_CODE_SSSS_KERNEL_8",
			"CONST_SRC_CODE_SSSS_KERNEL_9",
			"CONST_SRC_CODE_SSSS_KERNEL_10",
			"CONST_SRC_CODE_SSSS_KERNEL_11",
			"CONST_SRC_CODE_SSSS_KERNEL_12",
			"CONST_SRC_CODE_OUTDOOR_FEATHER_PARMS",
			"CONST_SRC_CODE_ENVMAP_PARMS",
			"CONST_SRC_CODE_SUN_SHADOWMAP_PIXEL_ADJUST_ARRAY_0",
			"CONST_SRC_CODE_SUN_SHADOWMAP_PIXEL_ADJUST_ARRAY_1",
			"CONST_SRC_CODE_SUN_SHADOWMAP_PIXEL_ADJUST_ARRAY_2",
			"CONST_SRC_CODE_SUN_SHADOWMAP_CASCADE_V_CLAMP",
			"CONST_SRC_CODE_SUN_SHADOWMAP_NEAR_FAR_PLANE",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_1",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_2",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_3",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_ARRAY_0",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_ARRAY_1",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_ARRAY_2",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_ARRAY_3",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_1",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_2",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_3",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_ARRAY_0",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_ARRAY_1",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_ARRAY_2",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_ARRAY_3",
			"CONST_SRC_CODE_COMPOSITE_FX_DISTORTION",
			"CONST_SRC_CODE_POSTFX_FADE_EFFECT",
			"CONST_SRC_CODE_SCENE_UV_MULT",
			"CONST_SRC_CODE_SCENE_VIEW_MULT",
			"CONST_SRC_CODE_TEXCOORD_CLAMP_0",
			"CONST_SRC_CODE_TEXCOORD_CLAMP_1",
			"CONST_SRC_CODE_VIEWPORT_DIMENSIONS",
			"CONST_SRC_CODE_FRAMEBUFFER_READ",
			"CONST_SRC_CODE_THERMAL_COLOR_OFFSET",
			"CONST_SRC_CODE_THERMAL_FADE_CONTROL",
			"CONST_SRC_CODE_THERMAL_FADE_COLOR",
			"CONST_SRC_CODE_PLAYLIST_POPULATION_PARAMS",
			"CONST_SRC_CODE_TESSELLATION_PARMS",
			"CONST_SRC_CODE_TESSELLATION_PARMS2",
			"CONST_SRC_CODE_EYE_PARAMETER_DVAR",
			"CONST_SRC_CODE_MP_RIM_PARAMETER_DVAR1",
			"CONST_SRC_CODE_MP_RIM_PARAMETER_DVAR2",
			"CONST_SRC_CODE_HEAD_ROT_MAT_R0",
			"CONST_SRC_CODE_HEAD_ROT_MAT_R1",
			"CONST_SRC_CODE_HEAD_ROT_MAT_R2",
			"CONST_SRC_CODE_GUN_SIGHT_COLOR",
			"CONST_SRC_CODE_GUN_RETICLE_COLOR",
			"CONST_SRC_CODE_ADS_OVERLAY_RECT",
			"CONST_SRC_CODE_BASE_LIGHTING_COORDS",
			"CONST_SRC_CODE_LIGHT_PROBE_AMBIENT",
			"CONST_SRC_CODE_CLIP_SPACE_LOOKUP_SCALE",
			"CONST_SRC_CODE_CLIP_SPACE_LOOKUP_OFFSET",
			"CONST_SRC_CODE_PARTICLE_CLOUD_TEXTURE_ATLAS_SETTINGS",
			"CONST_SRC_CODE_PARTICLE_CLOUD_VEL_WORLD",
			"CONST_SRC_CODE_PARTICLE_CLOUD_MATRIX0",
			"CONST_SRC_CODE_PARTICLE_CLOUD_MATRIX1",
			"CONST_SRC_CODE_PARTICLE_CLOUD_MATRIX2",
			"CONST_SRC_CODE_PARTICLE_CLOUD_SPARK_COLOR0",
			"CONST_SRC_CODE_PARTICLE_CLOUD_SPARK_COLOR1",
			"CONST_SRC_CODE_PARTICLE_CLOUD_SPARK_COLOR2",
			"CONST_SRC_CODE_PARTICLE_FOUNTAIN_PARM0",
			"CONST_SRC_CODE_PARTICLE_FOUNTAIN_PARM1",
			"CONST_SRC_CODE_LIT2D_BLOODSPATTER_FADESHARPNESS",
			"CONST_SRC_CODE_BLUR_SCENE_PIXEL_POS_TO_UV",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_0",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_1",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_2",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_3",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_4",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_5",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_6",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_7",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_8",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_9",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_10",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_11",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_12",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_13",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_14",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_15",
			"CONST_SRC_CODE_DEPTH_FROM_CLIP",
			"CONST_SRC_CODE_CODE_MESH_ARG_0",
			"CONST_SRC_CODE_CODE_MESH_ARG_1",
			"CONST_SRC_CODE_CODE_MESH_ARG_3",
			"CONST_SRC_CODE_CODE_MESH_ARG_4",
			"CONST_SRC_CODE_SCRIPT_CONST0",
			"CONST_SRC_CODE_VIEW_MATRIX",
			"CONST_SRC_CODE_INVERSE_VIEW_MATRIX",
			"CONST_SRC_CODE_TRANSPOSE_VIEW_MATRIX",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_VIEW_MATRIX",
			"CONST_SRC_CODE_PROJECTION_MATRIX",
			"CONST_SRC_CODE_INVERSE_PROJECTION_MATRIX",
			"CONST_SRC_CODE_TRANSPOSE_PROJECTION_MATRIX",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_PROJECTION_MATRIX",
			"CONST_SRC_CODE_VIEW_PROJECTION_MATRIX",
			"CONST_SRC_CODE_INVERSE_VIEW_PROJECTION_MATRIX",
			"CONST_SRC_CODE_TRANSPOSE_VIEW_PROJECTION_MATRIX",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_VIEW_PROJECTION_MATRIX",
			"CONST_SRC_CODE_SHADOW_LOOKUP_MATRIX",
			"CONST_SRC_CODE_INVERSE_SHADOW_LOOKUP_MATRIX",
			"CONST_SRC_CODE_TRANSPOSE_SHADOW_LOOKUP_MATRIX",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_SHADOW_LOOKUP_MATRIX",
			"CONST_SRC_CODE_SHADOW_LOOKUP_MATRIX1",
			"CONST_SRC_CODE_INVERSE_SHADOW_LOOKUP_MATRIX1",
			"CONST_SRC_CODE_TRANSPOSE_SHADOW_LOOKUP_MATRIX1",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_SHADOW_LOOKUP_MATRIX1",
			"CONST_SRC_CODE_SHADOW_LOOKUP_MATRIX2",
			"CONST_SRC_CODE_INVERSE_SHADOW_LOOKUP_MATRIX2",
			"CONST_SRC_CODE_TRANSPOSE_SHADOW_LOOKUP_MATRIX2",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_SHADOW_LOOKUP_MATRIX2",
			"CONST_SRC_CODE_SHADOW_LOOKUP_MATRIX3",
			"CONST_SRC_CODE_INVERSE_SHADOW_LOOKUP_MATRIX3",
			"CONST_SRC_CODE_TRANSPOSE_SHADOW_LOOKUP_MATRIX3",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_SHADOW_LOOKUP_MATRIX3",
			"CONST_SRC_CODE_WORLD_OUTDOOR_LOOKUP_MATRIX",
			"CONST_SRC_CODE_INVERSE_WORLD_OUTDOOR_LOOKUP_MATRIX",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_OUTDOOR_LOOKUP_MATRIX",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_OUTDOOR_LOOKUP_MATRIX",
			"CONST_SRC_CODE_PREV_FRAME_WORLD_MATRIX",
			"CONST_SRC_CODE_PREV_FRAME_INVERSE_WORLD_MATRIX",
			"CONST_SRC_CODE_PREV_FRAME_TRANSPOSE_WORLD_MATRIX",
			"CONST_SRC_CODE_PREV_FRAME_INVERSE_TRANSPOSE_WORLD_MATRIX",
			"CONST_SRC_CODE_WORLD_MATRIX0",
			"CONST_SRC_CODE_INVERSE_WORLD_MATRIX0",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_MATRIX0",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_MATRIX0",
			"CONST_SRC_CODE_WORLD_VIEW_MATRIX0",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_MATRIX0",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_MATRIX0",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX0",
			"CONST_SRC_CODE_WORLD_VIEW_PROJECTION_MATRIX0",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_PROJECTION_MATRIX0",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX0",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX0",
			"CONST_SRC_CODE_WORLD_MATRIX1",
			"CONST_SRC_CODE_INVERSE_WORLD_MATRIX1",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_MATRIX1",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_MATRIX1",
			"CONST_SRC_CODE_WORLD_VIEW_MATRIX1",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_MATRIX1",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_MATRIX1",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX1",
			"CONST_SRC_CODE_WORLD_VIEW_PROJECTION_MATRIX1",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_PROJECTION_MATRIX1",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX1",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX1",
			"CONST_SRC_CODE_WORLD_MATRIX2",
			"CONST_SRC_CODE_INVERSE_WORLD_MATRIX2",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_MATRIX2",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_MATRIX2",
			"CONST_SRC_CODE_WORLD_VIEW_MATRIX2",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_MATRIX2",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_MATRIX2",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX2",
			"CONST_SRC_CODE_WORLD_VIEW_PROJECTION_MATRIX2",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_PROJECTION_MATRIX2",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX2",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX2",
		};

		std::array<std::string, 422> h1_code_consts = 
		{
			"CONST_SRC_CODE_LIGHT_POSITION",
			"CONST_SRC_CODE_LIGHT_DIFFUSE",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET",
			"CONST_SRC_CODE_LIGHT_SPECULAR",
			"CONST_SRC_CODE_LIGHT_SPOTDIR",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM",
			"CONST_SRC_CODE_LIGHT_POSITION1",
			"CONST_SRC_CODE_LIGHT_DIFFUSE1",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE1",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET1",
			"CONST_SRC_CODE_LIGHT_SPECULAR1",
			"CONST_SRC_CODE_LIGHT_SPOTDIR1",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS1",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT1",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM1",
			"CONST_SRC_CODE_LIGHT_POSITION2",
			"CONST_SRC_CODE_LIGHT_DIFFUSE2",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE2",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET2",
			"CONST_SRC_CODE_LIGHT_SPECULAR2",
			"CONST_SRC_CODE_LIGHT_SPOTDIR2",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS2",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT2",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM2",
			"CONST_SRC_CODE_LIGHT_POSITION3",
			"CONST_SRC_CODE_LIGHT_DIFFUSE3",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE3",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET3",
			"CONST_SRC_CODE_LIGHT_SPECULAR3",
			"CONST_SRC_CODE_LIGHT_SPOTDIR3",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS3",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT3",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM3",
			"CONST_SRC_CODE_LIGHT_POSITION_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_POSITION_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_POSITION_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_POSITION_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_DIFFUSE_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_DIFFUSE_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_DIFFUSE_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_DIFFUSE_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_PHYSICALSIZE_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_FADEOFFSET_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_SPECULAR_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_SPECULAR_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_SPECULAR_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_SPECULAR_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_SPOTDIR_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_SPOTDIR_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_SPOTDIR_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_SPOTDIR_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_SPOTFACTORS_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_CUCOLORIS_ANIM_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT_DB_ARRAY_0",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT_DB_ARRAY_1",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT_DB_ARRAY_2",
			"CONST_SRC_CODE_LIGHT_FALLOFF_PLACEMENT_DB_ARRAY_3",
			"CONST_SRC_CODE_LIGHT_DYN_COUNT",
			"CONST_SRC_CODE_LIGHT_DYN_TYPES",
			"CONST_SRC_CODE_LIGHT_DYN_SHADOW_TYPES",
			"CONST_SRC_CODE_PARTICLE_CLOUD_COLOR",
			"CONST_SRC_CODE_GAMETIME",
			"CONST_SRC_CODE_SYSTEMTIME",
			"CONST_SRC_CODE_GENERIC_MATERIAL_DATA",
			"CONST_SRC_CODE_EYEOFFSET",
			"CONST_SRC_CODE_WORLD_MATRIX_EYE_OFFSET",
			"CONST_SRC_CODE_EMBLEM_LUT_SELECTOR",
			"CONST_SRC_CODE_MODEL_VELOCITY_PARMS",
			"CONST_SRC_CODE_MODEL_VELOCITY_SKINNED_PARMS",
			"CONST_SRC_CODE_POSTFX_CONTROL0",
			"CONST_SRC_CODE_POSTFX_CONTROL1",
			"CONST_SRC_CODE_POSTFX_CONTROL2",
			"CONST_SRC_CODE_POSTFX_CONTROL3",
			"CONST_SRC_CODE_POSTFX_CONTROL4",
			"CONST_SRC_CODE_POSTFX_CONTROL5",
			"CONST_SRC_CODE_POSTFX_CONTROL6",
			"CONST_SRC_CODE_POSTFX_CONTROL7",
			"CONST_SRC_CODE_POSTFX_CONTROL8",
			"CONST_SRC_CODE_POSTFX_CONTROL9",
			"CONST_SRC_CODE_POSTFX_CONTROLA",
			"CONST_SRC_CODE_POSTFX_CONTROLB",
			"CONST_SRC_CODE_POSTFX_CONTROLC",
			"CONST_SRC_CODE_POSTFX_CONTROLD",
			"CONST_SRC_CODE_POSTFX_CONTROLE",
			"CONST_SRC_CODE_POSTFX_CONTROLF",
			"CONST_SRC_CODE_SCRIPT_PARMS",
			"CONST_SRC_CODE_EFFECT_MODEL_COLOR",
			"CONST_SRC_CODE_EFFECT_MODEL_COLOR_EMISSIVE",
			"CONST_SRC_CODE_FILTER_TAP_0",
			"CONST_SRC_CODE_FILTER_TAP_1",
			"CONST_SRC_CODE_FILTER_TAP_2",
			"CONST_SRC_CODE_FILTER_TAP_3",
			"CONST_SRC_CODE_FILTER_TAP_4",
			"CONST_SRC_CODE_FILTER_TAP_5",
			"CONST_SRC_CODE_FILTER_TAP_6",
			"CONST_SRC_CODE_FILTER_TAP_7",
			"CONST_SRC_CODE_FILTER_TAP_8",
			"CONST_SRC_CODE_FILTER_TAP_9",
			"CONST_SRC_CODE_FILTER_TAP_10",
			"CONST_SRC_CODE_FILTER_TAP_11",
			"CONST_SRC_CODE_COLOR_MATRIX_R",
			"CONST_SRC_CODE_COLOR_MATRIX_G",
			"CONST_SRC_CODE_COLOR_MATRIX_B",
			"CONST_SRC_CODE_RENDER_TARGET_SIZE",
			"CONST_SRC_CODE_RENDER_SOURCE_SIZE",
			"CONST_SRC_CODE_VEIL_PARAMS",
			"CONST_SRC_CODE_FXAA_RCPFRAMEOPT",
			"CONST_SRC_CODE_VOLUME_LIGHT_SCATTER_1",
			"CONST_SRC_CODE_VOLUME_LIGHT_SCATTER_2",
			"CONST_SRC_CODE_VOLUME_LIGHT_SCATTER_3",
			"CONST_SRC_CODE_MODEL_LIGHTMAP_PARAMS",
			"CONST_SRC_CODE_NEARPLANE_ORG",
			"CONST_SRC_CODE_NEARPLANE_DX",
			"CONST_SRC_CODE_NEARPLANE_DY",
			"CONST_SRC_CODE_SSAO_POWER_BB_SHARPNESS_STEP",
			"CONST_SRC_CODE_SSAO_COLOR_COEFF",
			"CONST_SRC_CODE_SSAO_FALLOFF_DEPTH_SCALE",
			"CONST_SRC_CODE_SSAO_UV_TO_ROT_SCALE_AND_FADE",
			"CONST_SRC_CODE_SSAO_SAMPLE_MAT_SCALE",
			"CONST_SRC_CODE_SSAO_DEPTH_OFFSET_REJECT",
			"CONST_SRC_CODE_LIT2D_LIGHTDIRX2",
			"CONST_SRC_CODE_LIT2D_SPECHALFANGLEDIRX2",
			"CONST_SRC_CODE_LIT2D_AMBIENTCOLOR",
			"CONST_SRC_CODE_LIT2D_DIFFUSECOLOR",
			"CONST_SRC_CODE_LIT2D_SPECCOLOR_SPECEXPONENT",
			"CONST_SRC_CODE_LIT2D_ADDITIVECOLOR",
			"CONST_SRC_CODE_LIT2D_BLOODSPATTER_AMBIENTCOLOR",
			"CONST_SRC_CODE_LIT2D_BLOODSPATTER_DIFFUSECOLOR",
			"CONST_SRC_CODE_LIT2D_BLOODSPATTER_SPECCOLOR_SPECEXPONENT",
			"CONST_SRC_CODE_LIT2D_BLOODSPATTER_ADDITIVECOLOR",
			"CONST_SRC_CODE_LIT2D_HUDBLOOD_COLOR",
			"CONST_SRC_CODE_LIT2D_HUDBLOOD_COLOR_THIN",
			"CONST_SRC_CODE_DOF_EQUATION_VIEWMODEL_AND_FAR_BLUR",
			"CONST_SRC_CODE_DOF_EQUATION_SCENE",
			"CONST_SRC_CODE_DOF_LERP_SCALE",
			"CONST_SRC_CODE_DOF_LERP_BIAS",
			"CONST_SRC_CODE_DOF_ROW_DELTA",
			"CONST_SRC_CODE_DOF_EQUATION",
			"CONST_SRC_CODE_DOF_PARAMS",
			"CONST_SRC_CODE_DOF_TILE_PARAMS",
			"CONST_SRC_CODE_FRAME_COUNT_PARAMS",
			"CONST_SRC_CODE_MOTION_MATRIX_X",
			"CONST_SRC_CODE_MOTION_MATRIX_Y",
			"CONST_SRC_CODE_MOTION_MATRIX_W",
			"CONST_SRC_CODE_SSR_PREV_FRAME_VIEWPROJECTION_MATRIX_R0",
			"CONST_SRC_CODE_SSR_PREV_FRAME_VIEWPROJECTION_MATRIX_R1",
			"CONST_SRC_CODE_SSR_PREV_FRAME_VIEWPROJECTION_MATRIX_R2",
			"CONST_SRC_CODE_SSR_PREV_FRAME_VIEWPROJECTION_MATRIX_R3",
			"CONST_SRC_CODE_PREV_EYEPOSITION_TRANSFORM",
			"CONST_SRC_CODE_SCREEN_SPACE_REFLECTION_PARAMETERS",
			"CONST_SRC_CODE_CLIP_SPACE_LOOKUP_SCALE_AND_OFFSET",
			"CONST_SRC_CODE_SSR_CLIP_TO_FADE_SCALE_OFFSET_PS",
			"CONST_SRC_CODE_SSS_MRT_OFF_SHADER_OFF",
			"CONST_SRC_CODE_MDAO_VIEWTOOCCLUDER_MATRIX_R0",
			"CONST_SRC_CODE_MDAO_VIEWTOOCCLUDER_MATRIX_R1",
			"CONST_SRC_CODE_MDAO_VIEWTOOCCLUDER_MATRIX_R2",
			"CONST_SRC_CODE_MDAO_VIEWTOOCCLUDER_MATRIX_R3",
			"CONST_SRC_CODE_MDAO_WORLDTOOCCLUDERFRAME_MATRIX_R0",
			"CONST_SRC_CODE_MDAO_WORLDTOOCCLUDERFRAME_MATRIX_R1",
			"CONST_SRC_CODE_MDAO_WORLDTOOCCLUDERFRAME_MATRIX_R2",
			"CONST_SRC_CODE_MDAO_WORLDTOOCCLUDERFRAME_MATRIX_R3",
			"CONST_SRC_CODE_MDAO_SCREEN_PARAMS",
			"CONST_SRC_CODE_MDAO_CAMERA_PARAMS",
			"CONST_SRC_CODE_MDAO_LOOKUP_PARAMS",
			"CONST_SRC_CODE_MDAO_VOLUME_PARAMS",
			"CONST_SRC_CODE_DISTORTION_SAMPLE_LIMITS_PS",
			"CONST_SRC_CODE_SCOPE_SAMPLE_LIMITS_PS",
			"CONST_SRC_CODE_UV_TO_PREV_SCALED_CLIP_MAT_C0_PS",
			"CONST_SRC_CODE_UV_TO_PREV_SCALED_CLIP_MAT_C1_PS",
			"CONST_SRC_CODE_UV_TO_PREV_SCALED_CLIP_MAT_C3_PS",
			"CONST_SRC_CODE_PREV_FRAME_VIEWPROJECTION_MATRIX_R0",
			"CONST_SRC_CODE_PREV_FRAME_VIEWPROJECTION_MATRIX_R1",
			"CONST_SRC_CODE_PREV_FRAME_VIEWPROJECTION_MATRIX_R2",
			"CONST_SRC_CODE_PREV_FRAME_VIEWPROJECTION_MATRIX_R3",
			"CONST_SRC_CODE_PREV_FRAME_WORLD_MATRIX_EYE_OFFSET",
			"CONST_SRC_CODE_STATIC_VELOCITY_PARMS",
			"CONST_SRC_CODE_MOTION_BLUR_HQ_PARAMS",
			"CONST_SRC_CODE_MOTION_BLUR_HQ_TILE_MAX_PARAMS",
			"CONST_SRC_CODE_MB_UV_TO_PREV_SCALED_CLIP_MAT_C0_PS",
			"CONST_SRC_CODE_MB_UV_TO_PREV_SCALED_CLIP_MAT_C1_PS",
			"CONST_SRC_CODE_MB_UV_TO_PREV_SCALED_CLIP_MAT_C3_PS",
			"CONST_SRC_CODE_SHADOWMAP_SWITCH_PARTITION_ARRAY_0",
			"CONST_SRC_CODE_SHADOWMAP_SWITCH_PARTITION_ARRAY_1",
			"CONST_SRC_CODE_SHADOWMAP_DISTANCE_BIAS",
			"CONST_SRC_CODE_SHADOWMAP_SCALE",
			"CONST_SRC_CODE_SHADOWMAP_PARTITION_UV_OFFSET",
			"CONST_SRC_CODE_SHADOWMAP_CASCADE_MASK",
			"CONST_SRC_CODE_SHADOWMAP_DISTANCE_BLEND",
			"CONST_SRC_CODE_ZNEAR",
			"CONST_SRC_CODE_LIGHTING_LOOKUP_SCALE",
			"CONST_SRC_CODE_INV_SCENE_PROJECTION",
			"CONST_SRC_CODE_RIM_LIGHT_0_DIR",
			"CONST_SRC_CODE_RIM_LIGHT_0_COLOR",
			"CONST_SRC_CODE_RIM_LIGHT_1_DIR",
			"CONST_SRC_CODE_RIM_LIGHT_1_COLOR",
			"CONST_SRC_CODE_RIM_LIGHT_TECHNIQUE",
			"CONST_SRC_CODE_DEBUG_BUMPMAP",
			"CONST_SRC_CODE_MATERIAL_COLOR",
			"CONST_SRC_CODE_FOG",
			"CONST_SRC_CODE_FOG_COLOR_LINEAR",
			"CONST_SRC_CODE_FOG_COLOR_GAMMA",
			"CONST_SRC_CODE_FOG_SUN_CONSTS",
			"CONST_SRC_CODE_FOG_SUN_COLOR_LINEAR",
			"CONST_SRC_CODE_FOG_SUN_COLOR_GAMMA",
			"CONST_SRC_CODE_FOG_SUN_DIR",
			"CONST_SRC_CODE_FOG_SKY_FOG",
			"CONST_SRC_CODE_FOG_HEIGHT_FOG",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_0",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_1",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_2",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_3",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_4",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_5",
			"CONST_SRC_CODE_ATMOS_FOG_PARMS_6",
			"CONST_SRC_CODE_FOG_SKY_DIR",
			"CONST_SRC_CODE_FOG_DEPTHHACK",
			"CONST_SRC_CODE_GLOW_SETUP",
			"CONST_SRC_CODE_GLOW_APPLY",
			"CONST_SRC_CODE_GLOW_SETUP_ALT_COLOR_SCALE",
			"CONST_SRC_CODE_COLOR_BIAS",
			"CONST_SRC_CODE_COLOR_TINT_BASE",
			"CONST_SRC_CODE_COLOR_TINT_DELTA",
			"CONST_SRC_CODE_COLOR_TINT_QUADRATIC_DELTA",
			"CONST_SRC_CODE_PERCEPTUAL_PARMS",
			"CONST_SRC_CODE_FILMIC_PARMS",
			"CONST_SRC_CODE_FILMIC_SHOULDER_PARMS",
			"CONST_SRC_CODE_FILMIC_TOE_PARMS",
			"CONST_SRC_CODE_TONEMAP_PARMS",
			"CONST_SRC_CODE_HDR_STAGE_PARMS",
			"CONST_SRC_CODE_UI3D_UV_SETUP_0",
			"CONST_SRC_CODE_UI3D_UV_SETUP_1",
			"CONST_SRC_CODE_UI3D_UV_SETUP_2",
			"CONST_SRC_CODE_UI3D_UV_SETUP_3",
			"CONST_SRC_CODE_UI3D_UV_SETUP_4",
			"CONST_SRC_CODE_UI3D_UV_SETUP_5",
			"CONST_SRC_CODE_HUDFX_PARMS",
			"CONST_SRC_CODE_HUDFX_PARMS2",
			"CONST_SRC_CODE_SSSS_PARAMS",
			"CONST_SRC_CODE_SSSS_SCALE",
			"CONST_SRC_CODE_SSSS_KERNEL_0",
			"CONST_SRC_CODE_SSSS_KERNEL_1",
			"CONST_SRC_CODE_SSSS_KERNEL_2",
			"CONST_SRC_CODE_SSSS_KERNEL_3",
			"CONST_SRC_CODE_SSSS_KERNEL_4",
			"CONST_SRC_CODE_SSSS_KERNEL_5",
			"CONST_SRC_CODE_SSSS_KERNEL_6",
			"CONST_SRC_CODE_SSSS_KERNEL_7",
			"CONST_SRC_CODE_SSSS_KERNEL_8",
			"CONST_SRC_CODE_SSSS_KERNEL_9",
			"CONST_SRC_CODE_SSSS_KERNEL_10",
			"CONST_SRC_CODE_SSSS_KERNEL_11",
			"CONST_SRC_CODE_SSSS_KERNEL_12",
			"CONST_SRC_CODE_OUTDOOR_FEATHER_PARMS",
			"CONST_SRC_CODE_ENVMAP_PARMS",
			"CONST_SRC_CODE_SUN_SHADOWMAP_PIXEL_ADJUST_ARRAY_0",
			"CONST_SRC_CODE_SUN_SHADOWMAP_PIXEL_ADJUST_ARRAY_1",
			"CONST_SRC_CODE_SUN_SHADOWMAP_PIXEL_ADJUST_ARRAY_2",
			"CONST_SRC_CODE_SUN_SHADOWMAP_CASCADE_V_CLAMP",
			"CONST_SRC_CODE_SUN_SHADOWMAP_NEAR_FAR_PLANE",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_1",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_2",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_3",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_ARRAY_0",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_ARRAY_1",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_ARRAY_2",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_PIXEL_ADJUST_ARRAY_3",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_1",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_2",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_3",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_ARRAY_0",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_ARRAY_1",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_ARRAY_2",
			"CONST_SRC_CODE_SPOT_SHADOWMAP_ZTRANSFORM_ARRAY_3",
			"CONST_SRC_CODE_COMPOSITE_FX_DISTORTION",
			"CONST_SRC_CODE_POSTFX_FADE_EFFECT",
			"CONST_SRC_CODE_SCENE_UV_MULT",
			"CONST_SRC_CODE_SCENE_VIEW_MULT",
			"CONST_SRC_CODE_TEXCOORD_CLAMP_0",
			"CONST_SRC_CODE_TEXCOORD_CLAMP_1",
			"CONST_SRC_CODE_VIEWPORT_DIMENSIONS",
			"CONST_SRC_CODE_FRAMEBUFFER_READ",
			"CONST_SRC_CODE_THERMAL_COLOR_OFFSET",
			"CONST_SRC_CODE_THERMAL_FADE_CONTROL",
			"CONST_SRC_CODE_THERMAL_FADE_COLOR",
			"CONST_SRC_CODE_PLAYLIST_POPULATION_PARAMS",
			"CONST_SRC_CODE_TESSELLATION_PARMS",
			"CONST_SRC_CODE_TESSELLATION_PARMS2",
			"CONST_SRC_CODE_EYE_PARAMETER_DVAR",
			"CONST_SRC_CODE_MP_RIM_PARAMETER_DVAR1",
			"CONST_SRC_CODE_MP_RIM_PARAMETER_DVAR2",
			"CONST_SRC_CODE_HEAD_ROT_MAT_R0",
			"CONST_SRC_CODE_HEAD_ROT_MAT_R1",
			"CONST_SRC_CODE_HEAD_ROT_MAT_R2",
			"CONST_SRC_CODE_GUN_SIGHT_COLOR",
			"CONST_SRC_CODE_GUN_RETICLE_COLOR",
			"CONST_SRC_CODE_BASE_LIGHTING_COORDS",
			"CONST_SRC_CODE_LIGHT_PROBE_AMBIENT",
			"CONST_SRC_CODE_CLIP_SPACE_LOOKUP_SCALE",
			"CONST_SRC_CODE_CLIP_SPACE_LOOKUP_OFFSET",
			"CONST_SRC_CODE_PARTICLE_CLOUD_TEXTURE_ATLAS_SETTINGS",
			"CONST_SRC_CODE_PARTICLE_CLOUD_VEL_WORLD",
			"CONST_SRC_CODE_PARTICLE_CLOUD_MATRIX0",
			"CONST_SRC_CODE_PARTICLE_CLOUD_MATRIX1",
			"CONST_SRC_CODE_PARTICLE_CLOUD_MATRIX2",
			"CONST_SRC_CODE_PARTICLE_CLOUD_SPARK_COLOR0",
			"CONST_SRC_CODE_PARTICLE_CLOUD_SPARK_COLOR1",
			"CONST_SRC_CODE_PARTICLE_CLOUD_SPARK_COLOR2",
			"CONST_SRC_CODE_PARTICLE_FOUNTAIN_PARM0",
			"CONST_SRC_CODE_PARTICLE_FOUNTAIN_PARM1",
			"CONST_SRC_CODE_LIT2D_BLOODSPATTER_FADESHARPNESS",
			"CONST_SRC_CODE_BLUR_SCENE_PIXEL_POS_TO_UV",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_0",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_1",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_2",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_3",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_4",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_5",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_6",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_7",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_8",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_9",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_11",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_12",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_13",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_14",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_15",
			"CONST_SRC_CODE_REACTIVEMOTION_CENTERS_15", // 16
			"CONST_SRC_CODE_DEPTH_FROM_CLIP",
			"CONST_SRC_CODE_CODE_MESH_ARG_0",
			"CONST_SRC_CODE_CODE_MESH_ARG_1",
			"CONST_SRC_CODE_CODE_MESH_ARG_3",
			"CONST_SRC_CODE_CODE_MESH_ARG_4",
			"CONST_SRC_CODE_SCRIPT_CONST0",
			"CONST_SRC_CODE_VIEW_MATRIX",
			"CONST_SRC_CODE_INVERSE_VIEW_MATRIX",
			"CONST_SRC_CODE_TRANSPOSE_VIEW_MATRIX",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_VIEW_MATRIX",
			"CONST_SRC_CODE_PROJECTION_MATRIX",
			"CONST_SRC_CODE_INVERSE_PROJECTION_MATRIX",
			"CONST_SRC_CODE_TRANSPOSE_PROJECTION_MATRIX",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_PROJECTION_MATRIX",
			"CONST_SRC_CODE_VIEW_PROJECTION_MATRIX",
			"CONST_SRC_CODE_INVERSE_VIEW_PROJECTION_MATRIX",
			"CONST_SRC_CODE_TRANSPOSE_VIEW_PROJECTION_MATRIX",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_VIEW_PROJECTION_MATRIX",
			"CONST_SRC_CODE_SHADOW_LOOKUP_MATRIX",
			"CONST_SRC_CODE_INVERSE_SHADOW_LOOKUP_MATRIX",
			"CONST_SRC_CODE_TRANSPOSE_SHADOW_LOOKUP_MATRIX",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_SHADOW_LOOKUP_MATRIX",
			"CONST_SRC_CODE_SHADOW_LOOKUP_MATRIX1",
			"CONST_SRC_CODE_INVERSE_SHADOW_LOOKUP_MATRIX1",
			"CONST_SRC_CODE_TRANSPOSE_SHADOW_LOOKUP_MATRIX1",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_SHADOW_LOOKUP_MATRIX1",
			"CONST_SRC_CODE_SHADOW_LOOKUP_MATRIX2",
			"CONST_SRC_CODE_INVERSE_SHADOW_LOOKUP_MATRIX2",
			"CONST_SRC_CODE_TRANSPOSE_SHADOW_LOOKUP_MATRIX2",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_SHADOW_LOOKUP_MATRIX2",
			"CONST_SRC_CODE_SHADOW_LOOKUP_MATRIX3",
			"CONST_SRC_CODE_INVERSE_SHADOW_LOOKUP_MATRIX3",
			"CONST_SRC_CODE_TRANSPOSE_SHADOW_LOOKUP_MATRIX3",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_SHADOW_LOOKUP_MATRIX3",
			"CONST_SRC_CODE_WORLD_OUTDOOR_LOOKUP_MATRIX",
			"CONST_SRC_CODE_INVERSE_WORLD_OUTDOOR_LOOKUP_MATRIX",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_OUTDOOR_LOOKUP_MATRIX",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_OUTDOOR_LOOKUP_MATRIX",
			"CONST_SRC_CODE_PREV_FRAME_WORLD_MATRIX",
			"CONST_SRC_CODE_PREV_FRAME_INVERSE_WORLD_MATRIX",
			"CONST_SRC_CODE_PREV_FRAME_TRANSPOSE_WORLD_MATRIX",
			"CONST_SRC_CODE_PREV_FRAME_INVERSE_TRANSPOSE_WORLD_MATRIX",
			"CONST_SRC_CODE_WORLD_MATRIX0",
			"CONST_SRC_CODE_INVERSE_WORLD_MATRIX0",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_MATRIX0",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_MATRIX0",
			"CONST_SRC_CODE_WORLD_VIEW_MATRIX0",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_MATRIX0",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_MATRIX0",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX0",
			"CONST_SRC_CODE_WORLD_VIEW_PROJECTION_MATRIX0",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_PROJECTION_MATRIX0",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX0",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX0",
			"CONST_SRC_CODE_WORLD_MATRIX1",
			"CONST_SRC_CODE_INVERSE_WORLD_MATRIX1",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_MATRIX1",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_MATRIX1",
			"CONST_SRC_CODE_WORLD_VIEW_MATRIX1",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_MATRIX1",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_MATRIX1",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX1",
			"CONST_SRC_CODE_WORLD_VIEW_PROJECTION_MATRIX1",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_PROJECTION_MATRIX1",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX1",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX1",
			"CONST_SRC_CODE_WORLD_MATRIX2",
			"CONST_SRC_CODE_INVERSE_WORLD_MATRIX2",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_MATRIX2",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_MATRIX2",
			"CONST_SRC_CODE_WORLD_VIEW_MATRIX2",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_MATRIX2",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_MATRIX2",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX2",
			"CONST_SRC_CODE_WORLD_VIEW_PROJECTION_MATRIX2",
			"CONST_SRC_CODE_INVERSE_WORLD_VIEW_PROJECTION_MATRIX2",
			"CONST_SRC_CODE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX2",
			"CONST_SRC_CODE_INVERSE_TRANSPOSE_WORLD_VIEW_PROJECTION_MATRIX2",
		};

		unsigned short convert_code_const(unsigned short index)
		{
			const auto& name = h1_code_consts[index];
			if (index < 350)
			{
				for (auto i = 0; i < h2_code_consts.size(); i++)
				{
					if (name == h2_code_consts[i])
					{
						// idk why this happens, constant arr must not be correct
						auto new_index = static_cast<unsigned short>(i);
						if (index > 148 && index <= 211)
						{
							++new_index;
						}

						return new_index;
					}
				}
			}
			else
			{
				const auto diff = static_cast<unsigned short>(h2_code_consts.size() - h1_code_consts.size());
				static_assert(diff == 14);
				return index + diff;
			}

			printf("couldn't find h2 code const for %i %s!\n", index, name.data());
			return index;
		}

		unsigned short convert_dest(unsigned short index, unsigned short dest)
		{
			if (dest >= 37)
			{
				return dest + 1;
			}

			return dest;
		}

		MaterialShaderArgument* convert_shader_arguments(MaterialPass* pass, MaterialShaderArgument* args, utils::memory::allocator& allocator)
		{
			const auto stable_arg_start = pass->perPrimArgCount + pass->perObjArgCount;
			const auto arg_count = pass->perPrimArgCount + pass->perObjArgCount + pass->stableArgCount;

			const auto converted_args = allocator.allocate_array<MaterialShaderArgument>(arg_count);
			std::memcpy(converted_args, args, sizeof(MaterialShaderArgument) * arg_count);

			for (auto i = 0; i < arg_count; i++)
			{
				if (converted_args[i].type != MTL_ARG_CODE_CONST)
				{
					continue;
				}

				converted_args[i].u.codeConst.index = convert_code_const(converted_args[i].u.codeConst.index);
				if (i >= stable_arg_start)
				{
					//converted_args[i].dest = convert_dest(converted_args[i].u.codeConst.index, converted_args[i].dest);
				}
			}

			return converted_args;
		}
	}

	std::unordered_map<std::string, std::uintptr_t> ITechset::vertexdecl_pointers;

	std::uintptr_t ITechset::get_vertexdecl_pointer(std::string vertexdecl)
	{
		if (vertexdecl_pointers.find(vertexdecl) != vertexdecl_pointers.end())
		{
			return vertexdecl_pointers[vertexdecl];
		}
		return 0;
	}

	void ITechset::add_vertexdecl_pointer(std::string name, std::uintptr_t pointer)
	{

	}

	MaterialTechnique* parse_technique(const std::string& name, ZoneMemory* mem, std::uint32_t index)
	{
		return nullptr;
	}

	MaterialTechniqueSet* ITechset::parse(const std::string& name, ZoneMemory* mem)
	{
		return nullptr;
	}

	void ITechset::parse_constant_buffer_indexes(const std::string& techset, unsigned char* indexes, ZoneMemory* mem)
	{

	}

	void ITechset::parse_constant_buffer_def_array(const std::string& techset, MaterialConstantBufferDef** def_ptr, unsigned char* count, ZoneMemory* mem)
	{

	}

	void ITechset::parse_stateinfo(const std::string& techset, Material* mat, ZoneMemory* mem)
	{

	}

	void ITechset::parse_statebits(const std::string& techset, unsigned char* statebits, ZoneMemory* mem)
	{

	}

	void ITechset::parse_statebitsmap(const std::string& techset, GfxStateBits** map, unsigned char* count,
		std::vector<std::array<std::uint64_t, 10>>* dssb,
		std::vector<std::array<std::uint32_t, 3>>* bsb,
		ZoneMemory* mem)
	{

	}

	void ITechset::init(const std::string& name, ZoneMemory* mem)
	{

	}

	void ITechset::prepare(ZoneBuffer* buf, ZoneMemory* mem)
	{

	}

	void ITechset::load_depending(IZone* zone)
	{

	}

	std::string ITechset::name()
	{
		return this->name_;
	}

	std::int32_t ITechset::type()
	{
		return ASSET_TYPE_TECHNIQUE_SET;
	}

	void ITechset::write(IZone* zone, ZoneBuffer* buf)
	{

	}

	void ITechset::dump_constant_buffer_indexes(const std::string& techset, unsigned char* h1_cbi)
	{
		utils::memory::allocator allocator;
		const auto path = "techsets\\constantbuffer\\"s + techset + ".cbi";
		auto file = filesystem::file(path);
		file.open("wb");
		auto fp = file.get_fp();
		const auto cbi = convert_to_h2(h1_cbi, allocator);

		if (fp)
		{
			fwrite(cbi, TECHNIQUES_COUNT, 1, fp);
			file.close();
		}
	}

	void ITechset::dump_constant_buffer_def_array(const std::string& techset, unsigned char count, MaterialConstantBufferDef* def)
	{
		const auto path = "techsets\\constantbuffer\\"s + techset + ".cbt";
		assetmanager::dumper dump;
		if (!dump.open(path))
		{
			return;
		}

		dump.dump_int(count);
		dump.dump_array(def, count);
		for (int i = 0; i < count; i++)
		{
			if (def[i].vsData)
			{
				dump.dump_array(def[i].vsData, def[i].vsDataSize);
			}
			if (def[i].hsData)
			{
				dump.dump_array(def[i].hsData, def[i].hsDataSize);
			}
			if (def[i].dsData)
			{
				dump.dump_array(def[i].dsData, def[i].dsDataSize);
			}
			if (def[i].psData)
			{
				dump.dump_array(def[i].psData, def[i].psDataSize);
			}
			if (def[i].vsOffsetData)
			{
				dump.dump_array(def[i].vsOffsetData, def[i].vsOffsetDataSize);
			}
			if (def[i].hsOffsetData)
			{
				dump.dump_array(def[i].hsOffsetData, def[i].hsOffsetDataSize);
			}
			if (def[i].dsOffsetData)
			{
				dump.dump_array(def[i].dsOffsetData, def[i].dsOffsetDataSize);
			}
			if (def[i].psOffsetData)
			{
				dump.dump_array(def[i].psOffsetData, def[i].psOffsetDataSize);
			}
		}

		dump.close();
	}

	void ITechset::dump_stateinfo(const std::string& techset, Material* mat)
	{
		const auto path = "techsets\\state\\"s + techset + ".stateinfo";

		ordered_json json_data = {};

		json_data["stateFlags"] = mat->stateFlags;

		auto file = filesystem::file(path);
		file.open("wb");
		auto fp = file.get_fp();
		if (fp)
		{
			const auto json_dump = json_data.dump(4);
			file.write(json_dump.data(), json_dump.size(), 1);
			file.close();
		}
	}

	void ITechset::dump_statebits(const std::string& techset, unsigned char* h1_statebits)
	{
		utils::memory::allocator allocator;
		const auto path = "techsets\\state\\"s + techset + ".statebits";
		auto file = filesystem::file(path);
		file.open("wb");
		auto fp = file.get_fp();
		const auto statebits = convert_to_h2(h1_statebits, allocator);

		if (fp)
		{
			fwrite(statebits, TECHNIQUES_COUNT, 1, fp);
			file.close();
		}
	}

	void ITechset::dump_statebits_map(const std::string& techset, GfxStateBits* map, unsigned char count)
	{
		const auto path = "techsets\\state\\"s + techset + ".statebitsmap";

		ordered_json json_data = {};
		for (unsigned char i = 0; i < count; i++)
		{
			XGfxGlobals* varXGfxGlobals = GetXGfxGlobalsForZone(map[i].zone);
			ordered_json entry;
			entry["loadBits"][0] = map[i].loadBits[0];
			entry["loadBits"][1] = map[i].loadBits[1];
			entry["loadBits"][2] = map[i].loadBits[2];
			entry["loadBits"][3] = map[i].loadBits[3];
			entry["loadBits"][4] = map[i].loadBits[4];
			entry["loadBits"][5] = map[i].loadBits[5];
			for (int j = 0; j < 11; j++)
			{
				entry["depthStencilStateBits"][j] = varXGfxGlobals ? varXGfxGlobals->depthStencilStateBits[map[i].depthStencilState[j]] : 0;
			}
			for (int j = 0; j < 3; j++)
			{
				entry["blendStateBits"][j] = varXGfxGlobals ? varXGfxGlobals->blendStateBits[map[i].blendState][j] : 0;
			}
			entry["rasterizerState"] = map[i].rasterizerState;
			json_data[i] = entry;
		}

		auto file = filesystem::file(path);
		file.open("wb");
		auto fp = file.get_fp();
		if (fp)
		{
			const auto json_dump = json_data.dump(4);
			file.write(json_dump.data(), json_dump.size(), 1);
			file.close();
		}
	}

	void ITechset::dump_technique(MaterialTechnique* asset, int index)
	{
		const auto path = "techsets\\"s + asset->hdr.name + ".technique";

		assetmanager::dumper dumper;
		if (!dumper.open(path))
		{
			return;
		}

		utils::memory::allocator allocator;

		dumper.dump_single(&asset->hdr);
		const auto pass_array = allocator.allocate_array<MaterialPass>(asset->hdr.passCount);
		std::memcpy(pass_array, asset->passArray, sizeof(MaterialPass) * asset->hdr.passCount);
		for (auto i = 0; i < asset->hdr.passCount; i++)
		{
			pass_array[i].stableArgSize += 16;
		}
		dumper.dump_array(pass_array, asset->hdr.passCount);

		dumper.dump_string(asset->hdr.name);
		for (unsigned short i = 0; i < asset->hdr.passCount; i++)
		{
			if (asset->passArray[i].vertexShader)
			{
				dumper.dump_asset(asset->passArray[i].vertexShader);
				//IVertexShader::dump(asset->passArray[i].vertexShader);
			}

			if (asset->passArray[i].vertexDecl)
			{
				dumper.dump_asset(asset->passArray[i].vertexDecl);
				IVertexDecl::dump(reinterpret_cast<MaterialVertexDeclaration*>(asset->passArray[i].vertexDecl));
			}

			if (asset->passArray[i].hullShader)
			{
				dumper.dump_asset(asset->passArray[i].hullShader);
				//IHullShader::dump(asset->passArray[i].hullShader);
			}

			if (asset->passArray[i].domainShader)
			{
				dumper.dump_asset(asset->passArray[i].domainShader);
				//IDomainShader::dump(asset->passArray[i].domainShader);
			}

			if (asset->passArray[i].pixelShader)
			{
				dumper.dump_asset(asset->passArray[i].pixelShader);
				//IPixelShader::dump(asset->passArray[i].pixelShader);
			}

			if (asset->passArray[i].args)
			{
				const auto arg_count = asset->passArray[i].perObjArgCount + asset->passArray[i].perPrimArgCount + asset->passArray[i].stableArgCount;
				const auto converted_args = convert_shader_arguments(&asset->passArray[i], asset->passArray[i].args, allocator);
				dumper.dump_array(converted_args, arg_count);

				for (auto arg = 0; arg < arg_count; arg++)
				{
					if (asset->passArray[i].args[arg].type == 4)
					{
						dumper.dump_array(const_cast<float*>(asset->passArray[i].args[arg].u.literalConst), 4);
					}
				}
			}
		}

		dumper.close();
	}

	void yeet(h2::MaterialTechniqueSet* asset)
	{
		const auto path = "techsets\\"s + asset->name + ".techset.txt";

		filesystem::file file(path);
		file.open("wb");
		auto fp = file.get_fp();

		for (auto i = 0u; i < TECHNIQUES_COUNT; i++)
		{
			if (asset->techniques[i])
			{
				fprintf(fp, "%i: %s\n", i, asset->techniques[i]->hdr.name);
			}
			else
			{
				fprintf(fp, "%i: nullptr\n", i);
			}
		}

		file.close();
	}

	void ITechset::dump(MaterialTechniqueSet* h1_asset)
	{
		utils::memory::allocator allocator;
		const auto asset = convert_to_h2(h1_asset, allocator);
		const auto path = "techsets\\"s + asset->name + ".techset";

		yeet(asset);

		assetmanager::dumper dumper;
		if (!dumper.open(path))
		{
			return;
		}

		dumper.dump_single(asset);
		dumper.dump_string(asset->name);

		for (auto i = 0u; i < TECHNIQUES_COUNT; i++)
		{
			if (asset->techniques[i])
			{
				dumper.dump_string(asset->techniques[i]->hdr.name);
				ITechset::dump_technique(reinterpret_cast<MaterialTechnique*>(asset->techniques[i]), i);
			}
		}

		dumper.close();
	}
}